#!/usr/bin/bpftrace
BEGIN
{
	printf("Tracing stat syscalls... Hit Ctrl-C to end.\n");
	printf(" %-9s   %-6s %-16s %3s %s\n","TIME", "PID", "COMM", "ERR", "PATH");
}

tracepoint:syscalls:sys_enter_statfs
{
	@filename[tid] = args->pathname;
}

tracepoint:syscalls:sys_enter_statx,
tracepoint:syscalls:sys_enter_newstat,
tracepoint:syscalls:sys_enter_newlstat
{
	@filename[tid] = args->filename;
}

tracepoint:syscalls:sys_exit_statfs,
tracepoint:syscalls:sys_exit_statx,
tracepoint:syscalls:sys_exit_newstat,
tracepoint:syscalls:sys_exit_newlstat
/@filename[tid]/
{
	$ret = args->ret;
	$errno = $ret >= 0 ? 0 : - $ret;
    if (@filename[tid] && strncmp(str(@filename[tid]), "/etc/init.d", 10) == 0){
                    time("%H:%M:%S");
                    printf("\t %-6d %-16s %3d %s\n", pid, comm, $errno,str(@filename[tid]));}
    delete(@filename[tid]);
}

tracepoint:syscalls:sys_enter_openat
{   if (args->filename && strncmp(str(args->filename), "/etc/init.d", 10) == 0)
     {
        time("%H:%M:%S");
        printf("    PID %d: File added in /etc/init.d: %s\n", pid, str(args->filename));
    }
}
 
uretprobe:/bin/bash:readline
{
    time("%H:%M:%S");
    printf("\t %d %-12s (%s) %s\n", pid, comm, str(retval), "Readline");
}

tracepoint:syscalls:sys_enter_pwrite64
{   time("%H:%M:%S");
    printf("[%d] %s pwriting %d bytes to file at offset %lld\n", pid, comm, args->count, args->pos);
}

tracepoint:syscalls:sys_enter_rename 
{   time("%H:%M:%S");
    printf(" %d is renaming %s to %s\n", pid, str(args->oldname), str(args->newname));
}


END
{
	clear(@filename);
}